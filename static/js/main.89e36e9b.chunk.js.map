{"version":3,"sources":["components/Reverse.js","components/Count.js","index.js"],"names":["Switcheroo","props","split","reverse","Reverse","handleUserInputChange","event","setState","userinput","target","value","state","onSubmit","this","type","onChange","Component","CountChars","length","Count","Message","SwitchState","handleClick","onClick","React","ReactDOM","render","document","getElementById"],"mappings":"2KAEA,SAASA,EAAWC,GAEhB,OADYA,EAAMC,MAAM,IACbC,U,IA+BAC,E,kDA3BX,WAAYH,GAAO,IAAD,8BACd,cAAMA,IAKVI,sBAAwB,SAACC,GACrB,EAAKC,SAAS,CACVC,UAAWF,EAAMG,OAAOC,SAN5B,EAAKC,MAAQ,CACTH,UAAW,IAHD,E,0CAWlB,WACI,OACI,sBAAMI,SAAUZ,EAAWa,KAAKF,MAAMH,WAAtC,SACI,gCACI,wDACA,uBAAOM,KAAK,OACZJ,MAAOG,KAAKF,MAAMH,UAClBO,SAAUF,KAAKR,wBACf,uBACA,uDAA0BL,EAAWa,KAAKF,MAAMH,uB,GArB9CQ,aCLtB,SAASC,EAAWhB,GAEhB,OADYA,EAAMC,MAAM,IACbgB,O,IA+BAC,E,kDA3BX,WAAYlB,GAAO,IAAD,8BACd,cAAMA,IAKVI,sBAAwB,SAACC,GACrB,EAAKC,SAAS,CACVC,UAAWF,EAAMG,OAAOC,SAN5B,EAAKC,MAAQ,CACTH,UAAW,IAHD,E,0CAWlB,WACI,OACI,sBAAMI,SAAUK,EAAWJ,KAAKF,MAAMH,WAAtC,SACI,gCACI,wDACA,uBAAOM,KAAK,OACZJ,MAAOG,KAAKF,MAAMH,UAClBO,SAAUF,KAAKR,wBACf,uBACA,qDAAwBY,EAAWJ,KAAKF,MAAMH,WAA9C,0B,GArBAQ,a,gBCFpB,SAASI,EAAQnB,GAEb,OAAGA,EAAMS,MACE,cAAC,EAAD,IAGJ,cAAC,EAAD,I,IAGLW,E,kDACF,WAAYpB,GAAO,IAAD,8BACd,cAAMA,IAGVqB,YAAc,WACV,EAAKf,SAAS,CACVG,OAAS,EAAKC,MAAMD,SAJxB,EAAKC,MAAQ,CAACD,OAAM,GAFN,E,0CASlB,WACI,OACA,gCACI,cAACU,EAAD,CAASV,MAAOG,KAAKF,MAAMD,QAE3B,uBACA,wBAAQa,QAASV,KAAKS,YAAtB,sC,GAhBcE,IAAMR,WAuBhCS,IAASC,OAAO,cAAC,EAAD,IAAeC,SAASC,eAAe,W","file":"static/js/main.89e36e9b.chunk.js","sourcesContent":["import { Component } from 'react'\r\n\r\nfunction Switcheroo(props) {\r\n    const arr = props.split('');\r\n    return arr.reverse();\r\n}\r\n\r\nclass Reverse extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            userinput: ''\r\n        }\r\n    }\r\n    handleUserInputChange = (event) => {\r\n        this.setState({\r\n            userinput: event.target.value\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <form onSubmit={Switcheroo(this.state.userinput)}>\r\n                <div>\r\n                    <label>Enter your string: </label>\r\n                    <input type='text' \r\n                    value={this.state.userinput} \r\n                    onChange={this.handleUserInputChange}/>\r\n                    <br/>\r\n                    <p>Your string reversed: {Switcheroo(this.state.userinput)}</p>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Reverse","import { Component } from 'react'\r\n\r\nfunction CountChars(props) {\r\n    const arr = props.split('');\r\n    return arr.length;\r\n}\r\n\r\nclass Count extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            userinput: ''\r\n        }\r\n    }\r\n    handleUserInputChange = (event) => {\r\n        this.setState({\r\n            userinput: event.target.value\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <form onSubmit={CountChars(this.state.userinput)}>\r\n                <div>\r\n                    <label>Enter your string: </label>\r\n                    <input type='text' \r\n                    value={this.state.userinput} \r\n                    onChange={this.handleUserInputChange}/>\r\n                    <br/>\r\n                    <p>Your string length: {CountChars(this.state.userinput)} characters</p>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Count","import Reverse from './components/Reverse'\nimport Count from './components/Count'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nfunction Message(props){\n    //if props.value is true, call reverse component (default value)\n    if(props.value){\n        return <Reverse />\n    }\n    //else call count component\n    return <Count />\n}\n\nclass SwitchState extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {value:true}\n    }\n    handleClick = () =>{\n        this.setState({\n            value : !this.state.value\n        })\n    }\n    render(){\n        return(\n        <div>\n            <Message value={this.state.value}></Message>\n            \n            <br/>\n            <button onClick={this.handleClick}>Switch components</button>\n        </div>\n        )\n    }\n}\n\n\nReactDOM.render(<SwitchState/>,document.getElementById('root'));\n\n"],"sourceRoot":""}